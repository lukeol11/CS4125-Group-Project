package com.cs4125.shop.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.ArrayList;
import java.util.List;

@RestController
@RequestMapping("/api")
public class Compatibility {
    @PostMapping("/cart/add")
    public ResponseEntity<String> addComponentToCart(@RequestParam("name") String componentName) {
        // Fetch the new component by its name or any other criteria
        Component newComponent = getComponentByName(componentName);

        if (newComponent == null) {
            return ResponseEntity.status(HttpStatus.OK).body("Component not found.");
        }

        // Check compatibility based on actual compatibility
        if (!checkCompatibility(newComponent)) {
            return ResponseEntity.status(HttpStatus.OK).body("Component is not compatible with item(s) in the cart.");
        }

        // Add the component to the cart
        cart.addComponent(newComponent);
        return ResponseEntity.status(HttpStatus.OK).body("Component added to the cart.");
    }

    // Implement compatibility checks based on actual compatibility
    private boolean checkCompatibility(Component newComponent) {
        for (Component cartComponent : cart.getComponents()) {
            if (!isCompatible(newComponent, cartComponent)) {
                return false;
            }
        }
        return true; // If no incompatibility found
    }

    private boolean isCompatible(Component newComponent, Component cartComponent) {
        // Implement the logic to check actual compatibility
        return newComponent.isCompatibleWith(cartComponent);
    }
    
    // You can add a method to fetch a component by its name
    private Component getComponentByName(String componentName) {
        for (Component component : componentList) {
            if (component.getName().equals(componentName)) {
                return component;
            }
        }
        return null; // Component not found
    }
}
